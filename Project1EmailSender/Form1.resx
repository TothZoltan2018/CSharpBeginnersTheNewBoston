<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANkSURBVEhLrVTrS9NRGN4/0L/Qt4KCgi5CRVBZGXSDSuhDdzIINImi+lIfKq3APpR0IYosy5wo
        tWI0ceW8LVw557y0Sufa1d9+c79tv6nT5vZ03rOLl1a58oWHs3PO8z7P+75nm+Kf4sEMLFpQugBsXchW
        RQr/F1Piaxlw2HAYSZPl82mwhMSvWa9BJdbhYueFtEnyPoGsYiqRi5daS1HnVaLscwnKv9zEaUNhymRx
        mptVJJKWMnDxWm81Snou4byxGGc/FeGK+RIK2o6mTIiXZTxQ5JA4jeWlWIOyvqs4ZzyFwvYCHNMfwAn9
        EZwxFGN/Y/6USVbBxK9br+OVWIt7327hRu9lHGzNx17dDuzT7cJJ/XEcaz2EA037sfVtbsIkm6CE6VCG
        q7n4du1m7NTmcfHZnGTq3wPADFA31XIVF8/VrMcWzQZeOYnO4JU3+vAvIIOq0HMuvk6dg/XqNch/v+fX
        qonsEwLo9AA9XsAthOHwR9EnAv5ABFIwgkEJEENRhKQw3DLjMJDBs2AlF1+pWobVqhXY3bAzs8FHaxAe
        lmQWgG++OGwBwBEEhuQ4vCMEwDcKDI/GMTzGVgYyqAw+5ZWTeI5qFbZp8jIb1LS78bJDgDsUg8UH9PsB
        OzOgSgUmLqYMmLA/CTJ4EqjgY6HKSXyTemNmg++BGCpanHjW5oRDivKRWBmcIdZFGNM6mDIhod8hKZ0I
        MqBKvw7HUfPRi/vvbPgqRLgwjYp3wT6nu2CgVWImxCP+i3YBFjEGJ+MWlet+b9DlmcQbcwC3660w2WUu
        Rm/hSXYhsj0ZhcbB74mn6gqgwxWdu0GLdRyPml08ud4sYuRHYkxkQpWPRcHP6f5hkwuN/ZG5G7z/IuOu
        1oYP/RL8I1FUsjep0jsxOhFDeAJ8pT2d0z3x7jB+g0X+swE98muTD4+b7LCKY5DZCKjaITkGtUlERbMd
        7QMSX2lP53RPPJc0wfPqPnlhkyYzG9DXVNs7DEGeZOOI81mnvo4EnUXiI6F1+jnxiE95lK9kOhkNBn3j
        sLMubFKM/7DoIecK4tMEKH+A6WQ06HZPoNP1A30C+4uYIz7P2lO+iSGjgdHkwKueCIfe5IGmOwRl1zia
        zD6OWnOEn9FdimcwOvgZ3aV53Rk6uFDRwQ/nE0lpFgrFT7KV8lLipSsJAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>